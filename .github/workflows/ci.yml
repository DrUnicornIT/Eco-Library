name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Check for 'skip ci' in commit messages
        run: |
          COMMIT_MESSAGES=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ "$COMMIT_MESSAGES" == *"[skip ci]"* ]]; then
            echo "Commit message contains [skip ci]. Skipping CI."
            exit 0
          fi

      - name: Check if PR is a merge PR
        run: |
          if [ "${{ github.event.pull_request.base.ref }}" != "main" ]; then
            echo "This merge PR already has a CI run. Skipping CI."
            exit 0
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Typecheck
        run: bun run type-check

      - name: Lint
        run: bun run lint

      - name: Test
        run: bun run test -- --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3

  deploy-preview:
    name: Deploy preview
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Vercel CLI
        run: bun add -g vercel

      - name: Install dependencies
        run: bun install

      - name: Build Project
        run: bun run build

      - name: Deploy Project to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

  deploy-production:
    name: Deploy production
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip deploy]')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Vercel CLI
        run: bun add -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
