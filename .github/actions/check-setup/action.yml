name: Check setup

runs:
  using: 'composite'
  steps:
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      shell: bash
      run: pnpm install

    - name: Create environment variables file
      run: |
        echo "DATABASE_URL=${DATABASE_URL}" >> .env.local
        echo "DATABASE_AUTH_TOKEN=${DATABASE_AUTH_TOKEN}" >> .env.local
        echo "UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL}" >> .env.local
        echo "UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN}" >> .env.local
        echo "RESEND_API_KEY=${RESEND_API_KEY}" >> .env.local
        echo "AUTH_TRUST_HOST=${AUTH_TRUST_HOST}" >> .env.local
        echo "AUTH_SECRET=${AUTH_SECRET}" >> .env.local
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
        UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
        UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
        RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        AUTH_TRUST_HOST: ${{ secrets.AUTH_TRUST_HOST }}
        AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
